{"version":3,"sources":["organisms/Window.jsx","organisms/StationsList.js","utils/refresh.js","atoms/ValueProperty.jsx","molecules/FieldProperty.jsx","organisms/StationProperty.jsx","data.js","pages/AssesmentRecord.jsx","App.js","index.js"],"names":["Window","title","children","style","minHeight","borderRadius","border","padding","display","height","backgroundColor","borderTopLeftRadius","borderTopRightRadius","marginLeft","marginTop","color","paddingLeft","paddingRight","float","StationsList","stations","onSelected","multiple","width","size","onChange","e","target","options","selectedIndex","value","map","s","idx","id","name","useForceRefresh","React","useState","c","setC","ValueProperty","prop","editable","isGood","type","readOnly","Field","props","label","FieldReadOnly","FieldEditable","FieldVariance","parseInt","expected","v","isNaN","StationProperty","station","refresh","className","DataSet","getById","filter","date","AssesmentRecord","selectedStation","setSelectedStation","verticalAlign","App","rootElement","document","getElementById","createRoot","render"],"mappings":"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","file":"static/js/main.27ce07e4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport function Window({ title, children }) {\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: \"100px\",\r\n        borderRadius: \"7px\",\r\n        border: \"solid 2px blue\",\r\n        padding: \"0\",\r\n        display: \"inline-block\"\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          border: \"solid 1px blue\",\r\n          height: \"20px\",\r\n          backgroundColor: \"blue\",\r\n          borderTopLeftRadius: \"7px\",\r\n          borderTopRightRadius: \"7px\",\r\n          marginLeft: \"-1px\",\r\n          marginTop: \"-1px\",\r\n          color: \"#DDD\",\r\n          paddingLeft: \"1em\",\r\n          paddingRight: \"0.25em\"\r\n        }}\r\n      >\r\n        <div\r\n          style={{\r\n            float: \"right\",\r\n            border: \"1px solid white\",\r\n            paddingLeft: \"5px\",\r\n            paddingRight: \"5px\",\r\n            color: \"white\",\r\n            backgroundColor: \"#EA866D\"\r\n          }}\r\n        >\r\n          x\r\n        </div>\r\n        {title}\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function StationsList({ stations, onSelected }) {\r\n  return (\r\n    <select\r\n      multiple\r\n      style={{ width: \"10em\" }}\r\n      size=\"15\"\r\n      onChange={(e) =>\r\n        onSelected(e.target.options[e.target.selectedIndex].value)\r\n      }\r\n    >\r\n      {stations.map((s, idx) => {\r\n        return (\r\n          <option value={s.id} key={s.id}>\r\n            {s.name}\r\n          </option>\r\n        );\r\n      })}\r\n    </select>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport function useForceRefresh() {\r\n  let [c, setC] = React.useState(0);\r\n  let refresh = () => {\r\n    setC(c + 1);\r\n  };\r\n  return refresh;\r\n}\r\n","import React from \"react\";\r\n\r\nexport function ValueProperty({ value, prop, editable, isGood, onChange }) {\r\n  isGood = isGood ?? true;\r\n\r\n  return (\r\n    <input\r\n      style={{\r\n        backgroundColor: editable ? \"white\" : \"lightgray\",\r\n        color: isGood ? \"black\" : \"red\"\r\n      }}\r\n      type=\"text\"\r\n      value={typeof prop === \"function\" ? prop(value) : value[prop] ?? \"\"}\r\n      onChange={(e) => {\r\n        value[prop] = e.target.value;\r\n        if (onChange) onChange(e.target.value);\r\n      }}\r\n      readOnly={!editable}\r\n    />\r\n  );\r\n}\r\n","import { ValueProperty } from \"../atoms/ValueProperty\";\r\n\r\nfunction Field(props) {\r\n  let { label } = props;\r\n  return (\r\n    <li>\r\n      <span>{label}</span>\r\n      <span>\r\n        <ValueProperty {...props} />\r\n      </span>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport function FieldReadOnly(props) {\r\n  return <Field {...props} />;\r\n}\r\n\r\nexport function FieldEditable(props) {\r\n  return <Field {...props} editable={true} onChange={props.onChange} />;\r\n}\r\n\r\nexport function FieldVariance(props) {\r\n  let s = props.value;\r\n  function calcVariance() {\r\n    let v = s ? parseInt(s.expected, 10) - parseInt(s.value, 10) : \"\";\r\n    return isNaN(v) ? \"\" : v;\r\n  }\r\n\r\n  let isGood =\r\n    parseInt(s.expected, 10) - parseInt(s.value, 10) > 0 ? true : false;\r\n  return <Field {...props} isGood={isGood} prop={calcVariance} />;\r\n}\r\n","import React from \"react\";\r\nimport {\r\n  FieldReadOnly,\r\n  FieldVariance,\r\n  FieldEditable\r\n} from \"../molecules/FieldProperty\";\r\nimport { useForceRefresh } from \"../utils/refresh\";\r\n\r\nexport function StationProperty({ station, onChange }) {\r\n  let refresh = useForceRefresh();\r\n  return (\r\n    <ul className=\"table\">\r\n      <FieldReadOnly label=\"ID:\" value={station} prop=\"id\" />\r\n      <FieldEditable\r\n        label=\"Station Name:\"\r\n        value={station}\r\n        prop=\"name\"\r\n        onChange={() => {\r\n          onChange();\r\n          refresh();\r\n        }}\r\n      />\r\n      <FieldEditable label=\"Date:\" value={station} prop=\"date\" />\r\n      <FieldReadOnly label=\"Target:\" value={station} prop=\"expected\" />\r\n      <FieldEditable\r\n        label=\"Actual:\"\r\n        value={station}\r\n        prop=\"value\"\r\n        onChange={refresh}\r\n      />\r\n      <FieldVariance label=\"Variance:\" value={station} editable={false} />\r\n    </ul>\r\n  );\r\n}\r\n","export var DataSet = {\r\n  getById: (id) => {\r\n    return DataSet.stations.filter((s) => s.id == id)[0];\r\n  },\r\n  stations: [\r\n    {\r\n      id: 1,\r\n      name: \"RS2093\",\r\n      date: \"4.10.2018\",\r\n      value: 12,\r\n      expected: 15\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"MK9234\",\r\n      date: \"15.08.2018\",\r\n      value: 13,\r\n      expected: 10\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"SG8294\",\r\n      date: \"21.10.2018\",\r\n      value: 14,\r\n      expected: 25\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"TU1135\",\r\n      date: \"2.09.2018\",\r\n      value: 15,\r\n      expected: 50\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"KU4514\",\r\n      date: \"26.04.2019\",\r\n      value: 800,\r\n      expected: 511\r\n    }\r\n  ]\r\n};\r\n","import React from \"react\";\r\nimport { Window } from \"../organisms/Window\";\r\nimport { StationsList } from \"../organisms/StationsList\";\r\nimport { Station } from \"../organisms/Station\";\r\nimport { StationProperty } from \"../organisms/StationProperty\";\r\nimport { DataSet } from \"../data\";\r\nimport { useForceRefresh } from \"../utils/refresh\";\r\n\r\nexport function AssesmentRecord() {\r\n  let [selectedStation, setSelectedStation] = React.useState({});\r\n  let refresh = useForceRefresh();\r\n  const onSelected = (id) => {\r\n    setSelectedStation(DataSet.getById(id));\r\n  };\r\n  return (\r\n    <Window title=\"Assement Record\">\r\n      <div style={{ width: \"8em\", display: \"inline-block\", padding: \"1em\" }}>\r\n        <StationsList stations={DataSet.stations} onSelected={onSelected} />\r\n      </div>\r\n      <div\r\n        style={{ width: \"50%\", display: \"inline-block\", verticalAlign: \"top\" }}\r\n      >\r\n        <StationProperty station={selectedStation} onChange={refresh} />\r\n        {/* <Station station={selectedStation} onChange={refresh} /> */}\r\n      </div>\r\n    </Window>\r\n  );\r\n}\r\n","import \"./styles.css\";\n\nimport { AssesmentRecord } from \"./pages/AssesmentRecord\";\n\nexport default function App() {\n  return (\n    <div className=\"App\">\n      <AssesmentRecord />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport { createRoot } from \"react-dom/client\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nconst root = createRoot(rootElement);\n\nroot.render(\n  <StrictMode>\n    <App />\n  </StrictMode>\n);\n"],"sourceRoot":""}